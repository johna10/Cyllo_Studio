<?xml version="1.0" encoding="UTF-8" ?>
<templates>
	<t t-name="cyllo_studio.CalendarOverall">
		<div class="mt-3">
			<button class="btn btn-primary calendar-popover-btn" t-on-click="openDialog" >Filters and Popover Fields</button>
		</div>
		<div>
			<div class="accordion cy-calendar-overall-view-field-button" id="accordionExample">
				<div class="overall_container_list cy-from-type-field">
					<h2 class="accordion-header" id="headingOne">
						<button class="accordion-button cy-studio_accordion" type="button"
                                data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true"
                                aria-controls="collapseOne">
                            Field
                        </button>
					</h2>
					<div id="collapseOne" class="accordion-collapse collapse show"
                         aria-labelledby="headingOne"
                         data-bs-parent="#accordionExample">
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="start_date_field">Start Date Field:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                        options="dateFields"
                                        defaultValue="props.mode.fieldMapping.date_start"
                                        onChange="(value)=>this.updateCalender('date_start', value)"
                                        placeholder="'Start Date'"
                                        searchable="true"
                                    />
							</div>
						</div>
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="end_date_field">End Date Field:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                        options="dateFields"
                                        defaultValue="props.mode.fieldMapping.date_stop"
                                        onChange="(value)=>this.updateCalender('date_stop', value)"
                                        placeholder="'End Date'"
                                        searchable="true"
                                    />
							</div>
						</div>
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="delay_field">Delay Field:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                        options="dateFields"
                                        defaultValue="props.mode.fieldMapping.date_delay"
                                        onChange="(value)=>this.updateCalender('date_delay', value)"
                                        placeholder="'Delay Date'"
                                        searchable="true"
                                    />
							</div>
						</div>
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="all_day">All Day:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                        options="dateFields"
                                        defaultValue="props.mode.fieldMapping.all_day"
                                        onChange="(value)=>this.updateCalender('all_day', value)"
                                        placeholder="'All Day'"
                                        searchable="true"
                                    />
							</div>
						</div>
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="color">Color:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                        options="dateFields"
                                        defaultValue="props.mode.fieldMapping.color"
                                        onChange="(value)=>this.updateCalender('color', value)"
                                        placeholder="'Color'"
                                        searchable="true"
                                    />
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="accordion" id="accordionExample">
				<div class="overall_container_list">
					<h2 class="accordion-header" id="headingTwo">
						<button class="accordion-button cy-studio_accordion" type="button"
                                data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="true"
                                aria-controls="collapseTwo">
                            Details
                        </button>
					</h2>
					<div id="collapseTwo" class="accordion-collapse collapse hide"
                         aria-labelledby="headingTwo"
                         data-bs-parent="#accordionExample">
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="create_name_field">Default Display Field:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                            options="dateFields"
                                            defaultValue="props.mode.fieldMapping.create_name_field"
                                            onChange="(value)=>this.updateCalender('create_name_field', value)"
                                            searchable="true"
                                    />
							</div>
						</div>
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="display_mode">Display Modes:</label>
							<div class="cy-studio-custom-dropdown">
								<!--                                        <MultiSelectDropDown class="'cy-input form-control cy-studio-calendar'"-->
								<!--                                                     selectedValues="props.mode.scales"-->
								<!--                                                     allValues="scales"-->
								<!--                                                     onUpdate="(values)=>this.onDisplayModeChange(values, props.mode.scales)"/>-->
							</div>
						</div>
						<div class="dropdown-checkbox-container">
							<label class="cy-navbar_label customCheckbox-label" for="default_display_mode">Default Display Mode:</label>
							<div class="cy-studio-custom-dropdown">
								<CylloStudioDropdown
                                        options="props.mode.scales.map(item => ({ value: item, label: item }))"
                                        defaultValue="props.mode"
                                        onChange="(value)=>this.updateCalender('mode', value)"
                                        searchable="true"
                                    />
							</div>
						</div>
						<div class="checkbox-item">
							<input class="checkbox-input ViewCheck" id="show_unusual_days" type="checkbox" name="create"
                                   style="display: none;" t-model="props.mode.show_unusual_days" t-on-click="(ev)=> this.props.handleView('show_unusual_days',!props.mode.show_unusual_days)"/>
							<label class="checkbox-label" for="show_unusual_days">
								<span class="checkbox-indicator">
									<svg width="12px" height="9px" viewbox="0 0 12 9">
										<polyline points="1 5 4 8 11 1"></polyline>
									</svg>
								</span>
								<span class="label-text">Show Unusual Days</span>
							</label>
						</div>
						<div class="checkbox-item">
							<input class="checkbox-input ViewCheck" id="hide_date" type="checkbox" name="create"
                                   style="display: none;" t-model="props.mode.hide_date" t-on-click="(ev)=> this.props.handleView('hide_date',!props.mode.hide_date)"/>
							<label class="checkbox-label" for="hide_date">
								<span class="checkbox-indicator">
									<svg width="12px" height="9px" viewbox="0 0 12 9">
										<polyline points="1 5 4 8 11 1"></polyline>
									</svg>
								</span>
								<span class="label-text">Hide Date</span>
							</label>
						</div>
						<div class="checkbox-item">
							<input class="checkbox-input ViewCheck" id="hide_time" type="checkbox" name="create"
                                   style="display: none;" t-model="props.mode.hide_time" t-on-click="(ev)=> this.props.handleView('hide_time',!props.mode.hide_time)"/>
							<label class="checkbox-label" for="hide_time">
								<span class="checkbox-indicator">
									<svg width="12px" height="9px" viewbox="0 0 12 9">
										<polyline points="1 5 4 8 11 1"></polyline>
									</svg>
								</span>
								<span class="label-text">Hide Time</span>
							</label>
						</div>
						<div class="checkbox-item">
							<input class="checkbox-input ViewCheck" id="canCreate" type="checkbox" name="create"
                                   style="display: none;" t-model="props.mode.canCreate" t-on-click="(ev)=> this.props.handleView('create',!props.mode.canCreate)"/>
							<label class="checkbox-label" for="canCreate">
								<span class="checkbox-indicator">
									<svg width="12px" height="9px" viewbox="0 0 12 9">
										<polyline points="1 5 4 8 11 1"></polyline>
									</svg>
								</span>
								<span class="label-text">Can Create</span>
							</label>
						</div>
					</div>
				</div>
			</div>
		</div>
	</t>
</templates>