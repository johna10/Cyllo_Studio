<?xml version="1.0" encoding="UTF-8" ?>
<templates>
	<t t-name="cyllo_studio.KanbanOverall">
		<div class="m-3">
			<div t-if="props.ribbonElement" class="kanban-checkbox-container">
				<div class="kanban-input-container mb-2">
					<div class="w-100 kanban-input--box p-1 ms-0">
						<span class="cy-content-text">Ribbons</span>
					</div>
					<button class="cy-drag_edit-btn cy-drag_save">
						<i class="ri-edit-2-fill cy-studio-icon" t-on-click="editRibbon"/>
					</button>
				</div>
			</div>
			<div class="kanban-checkbox-container">
				<div class="kanban-input-container mb-2">
					<div class="w-100 kanban-input--box p-1 ms-0">
						<span class="cy-content-text">Menu</span>
					</div>
					<button t-if="!props.isMenu" class="cy-drag_edit-btn cy-drag_save">
						<i class="ri-add-line cy-studio-icon" />
					</button>
					<button t-else="" class="cy-drag_edit-btn cy-drag_delete">
						<i class="ri-delete-bin-6-fill cy-studio-icon" style="color:red;"
								 />
					</button>
				</div>
			</div>
			<div class="kanban-checkbox-container" t-if="props.isMenu">
				<div class="kanban-input-container mb-2">
					<div class="w-100 kanban-input--box p-1 ms-0">
						<span class="cy-content-text">Color Picker</span>
					</div>
					<button t-if="!props.hasColorPicker" class="cy-drag_edit-btn cy-drag_save">
						<i class="ri-add-line cy-studio-icon" />
					</button>
					<button t-else="" class="cy-drag_edit-btn cy-drag_delete">
						<i class="ri-delete-bin-6-fill cy-studio-icon" style="color:red;"
								  />
					</button>
				</div>
			</div>
			<div class="kanban-checkbox-container">
				<div class="kanban-input-container mb-2">
					<div class="w-100 kanban-input--box p-1 ms-0">
						<span class="cy-content-text">Progress Bar</span>
					</div>
					<button class="cy-drag_edit-btn cy-drag_save">
						<i t-att-class="props.progressAttributes ? 'ri-edit-2-fill' : 'ri-add-line'"
								   class="cy-studio-icon"/>
					</button>
					<button t-if="props.progressAttributes" class="cy-drag_edit-btn cy-drag_delete">
						<i class="ri-delete-bin-6-fill cy-studio-icon" style="color:red;"
								  />
					</button>
				</div>
			</div>
			<div class="dropdown-checkbox-container">
				<label class="cy-navbar_label customCheckbox-label" for="defaultGroupBy">Default GroupBy:</label>
				<div class="cy-studio-custom-dropdown">
				  <CylloStudioDropdown
							options="kanbanFields"
							defaultValue="props.mode.defaultGroupBy"
							onChange="(value)=>this.handleKanbanView('default_group_by', value)"
							searchable="true"
						  />
				</div>
			</div>
			<div class="checkbox-item">
				<input class="checkbox-input ViewCheck" id="canCreate" type="checkbox" name="create"
                           style="display: none;"  t-model="props.mode.create" t-on-click="(ev)=> this.props.handleView('create',!props.mode.create)"/>
				<label class="checkbox-label" for="canCreate">
					<span class="checkbox-indicator">
						<svg width="12px" height="9px" viewbox="0 0 12 9">
							<polyline points="1 5 4 8 11 1"></polyline>
						</svg>
					</span>
					<span class="label-text">Can Create</span>
				</label>
			</div>
			<div class="checkbox-item">
				<input class="checkbox-input ViewCheck" id="quickCreate" type="checkbox" name="quickCreate"
                           style="display: none;"  t-model="props.mode.create" t-on-click="(ev)=> this.props.handleView('create',!props.mode.create)"/>
				<label class="checkbox-label" for="quickCreate">
					<span class="checkbox-indicator">
						<svg width="12px" height="9px" viewbox="0 0 12 9">
							<polyline points="1 5 4 8 11 1"></polyline>
						</svg>
					</span>
					<span class="label-text">Quick Create</span>
				</label>
			</div>
			<div class="checkbox-item">
				<input class="checkbox-input ViewCheck" id="canDragRecord" type="checkbox" name="canDragRecord"
                           style="display: none;"  t-model="props.mode.create" t-on-click="(ev)=> this.props.handleView('create',!props.mode.create)"/>
				<label class="checkbox-label" for="canDragRecord">
					<span class="checkbox-indicator">
						<svg width="12px" height="9px" viewbox="0 0 12 9">
							<polyline points="1 5 4 8 11 1"></polyline>
						</svg>
					</span>
					<span class="label-text">Can Drag Records</span>
				</label>
			</div>
			<div class="checkbox-item">
				<input class="checkbox-input ViewCheck" id="canDragGroups" type="checkbox" name="canDragGroups"
                           style="display: none;"  t-model="props.mode.create" t-on-click="(ev)=> this.props.handleView('create',!props.mode.create)"/>
				<label class="checkbox-label" for="canDragGroups">
					<span class="checkbox-indicator">
						<svg width="12px" height="9px" viewbox="0 0 12 9">
							<polyline points="1 5 4 8 11 1"></polyline>
						</svg>
					</span>
					<span class="label-text">Can Drag Groups</span>
				</label>
			</div>
			<div class="checkbox-item">
				<input class="checkbox-input d-none ViewCheck" type="checkbox" id="showInvisibleElements"
                           name="checkbox4"/>
				<label class="checkbox-label" for="showInvisibleElements">
					<span class="checkbox-indicator">
						<svg width="12px" height="9px" viewbox="0 0 12 9">
							<polyline points="1 5 4 8 11 1"></polyline>
						</svg>
					</span>
					<span class="label-text">Show Invisible Elements</span>
				</label>
			</div>
		</div>
	</t>
</templates>