<?xml version="1.0" encoding="UTF-8" ?>
<templates>
    <t t-name="cyllo_studio.SmartButtonProperties" owl="1">
        <div class="smart_button_overall_container_list icon_popup ">
            <div class="d-flex gap-2">
                <div>
                    <label for="" class="cy-navbar_label">Label Name</label>
                    <input type="text" class="cy-input" name="label" style="width:60%;padding:8px 7px;" autocomplete="off"
                           t-model="state.label" placeholder="Button Name" t-att-readonly="props.properties?.nullString" t-att-class="state.readOnly"/>
<!--                    <span t-if="!state.isLabelValid" class="text-danger">special characters not allowed</span>-->
                </div>
                <div>
                    <label for="" class="cy-navbar_label">Icon</label>
                    <div class="d-flex justify-content-center cy-input" style="width: 45px;
                            height: 35px;">
                        <div t-on-click="iconToggle" >
                            <i class="cy-icons fa" t-att-class="state.icon"/>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-content cy-sheet_icon-selectBox d-none" t-ref="IconRef">
                <div class="modal-body pt-0 cy-icon-drop">
                    <ul class="d-flex align-items-start gap-3 flex-wrap cy-selection_icon-list py-2">
                        <li t-foreach="IconClass" t-as="icons" t-key="icons_index" class="list-unstyled">
                            <div class="cy-icon_box-item cursor-pointer opacity-75-hover"
                                 t-att-class="state.icon == icons ? 'bg-secondary rounded':''"
                                 t-on-click="()=> this.selectIcon(icons)">
                                <i class="cy-icons fa fa-fw" t-att-class="icons"/>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="mb-2" t-if="props.properties?.new_button">
                <label for="" class="cy-navbar_label">Related Field</label>
                <div class="cy-input related-field">
                    <ModelFieldSelector path="state.related_model" resModel="props.viewDetails.model"
                                        update.bind="updateFieldType"
                                        filter="(field, path)=> field.type.includes('one2many', 'many2one', 'many2many')"
                                        followRelations="false" readonly="false"/>
                </div>
            </div>
            <div class="mb-2" t-if="this.state.fieldDetails">
                <label for="" class="cy-navbar_label">Domain</label>
                <input type="text" class="cy-input" t-on-click="fieldDomain" readonly="1"
                       t-att-value="state.domain"/>
            </div>
            <div class="mb-2">
                <label for="" class="cy-navbar_label">Smart Button Visible To</label>
                <div class="cy-input cy-studio-visible-to-drop-align">
                    <MultiRecordSelector resIds="state.group_ids" resModel="'res.groups'"
                                         update="(group_ids)=> state.group_ids = group_ids"/>
                </div>
            </div>
            <div class="mt-3">
                <div class="checkbox-can-create">
                    <div>
                        <input type="checkbox" class="inp-can_create_label d-none" name="invisible" id="invisible"
                               t-on-click="onDomainRadioClick"

                        />
                        <label for="invisible" class="can_create_label">
                            <span>
                                <svg width="12px" height="9px" viewbox="0 0 12 9">
                                    <polyline points="1 5 4 8 11 1"></polyline>
                                </svg>
                            </span>
                            <span>Invisible</span>
                        </label>
                    </div>
                    <button class="cy-basedOn" data-attribute="invisible" t-on-click="invisibleDomain">
                        <span>Based On</span>
                        <span class="cy-setting-icon">
                            <svg
                                    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                <path fill="none" d="M0 0h24v24H0z"></path>
                                <path
                                        d="M2.13127 13.6308C1.9492 12.5349 1.95521 11.434 2.13216 10.3695C3.23337 10.3963 4.22374 9.86798 4.60865 8.93871C4.99357 8.00944 4.66685 6.93557 3.86926 6.17581C4.49685 5.29798 5.27105 4.51528 6.17471 3.86911C6.9345 4.66716 8.0087 4.99416 8.93822 4.60914C9.86774 4.22412 10.3961 3.23332 10.369 2.13176C11.4649 1.94969 12.5658 1.9557 13.6303 2.13265C13.6036 3.23385 14.1319 4.22422 15.0612 4.60914C15.9904 4.99406 17.0643 4.66733 17.8241 3.86975C18.7019 4.49734 19.4846 5.27153 20.1308 6.1752C19.3327 6.93499 19.0057 8.00919 19.3907 8.93871C19.7757 9.86823 20.7665 10.3966 21.8681 10.3695C22.0502 11.4654 22.0442 12.5663 21.8672 13.6308C20.766 13.6041 19.7756 14.1324 19.3907 15.0616C19.0058 15.9909 19.3325 17.0648 20.1301 17.8245C19.5025 18.7024 18.7283 19.4851 17.8247 20.1312C17.0649 19.3332 15.9907 19.0062 15.0612 19.3912C14.1316 19.7762 13.6033 20.767 13.6303 21.8686C12.5344 22.0507 11.4335 22.0447 10.3691 21.8677C10.3958 20.7665 9.86749 19.7761 8.93822 19.3912C8.00895 19.0063 6.93508 19.333 6.17532 20.1306C5.29749 19.503 4.51479 18.7288 3.86862 17.8252C4.66667 17.0654 4.99367 15.9912 4.60865 15.0616C4.22363 14.1321 3.23284 13.6038 2.13127 13.6308ZM11.9997 15.0002C13.6565 15.0002 14.9997 13.657 14.9997 12.0002C14.9997 10.3433 13.6565 9.00018 11.9997 9.00018C10.3428 9.00018 8.99969 10.3433 8.99969 12.0002C8.99969 13.657 10.3428 15.0002 11.9997 15.0002Z">
                                </path>
                            </svg>
                        </span>
                    </button>
                </div>
            </div>

            <div class="d-flex btn_div w-100 my-3 gap-2">
<!--                <button class="w-100 cy-cancel_btn" t-on-click="removeSmartButton"><t t-esc="state.isNewButton ? 'Cancel' : 'Remove'"/></button>-->
                <button class="cy-btn_save w-100" t-on-click="state.isNewButton ? addSmartButton : updateSmartButton">
                    Save
                </button>
            </div>
        </div>
    </t>
</templates>